<template>
  <div class="post-detail-page">
    <div v-if="loading" class="loading-container">
      <el-skeleton :rows="5" animated />
    </div>
    
    <div v-else-if="!post" class="not-found">
      <el-result
        icon="warning"
        title="Post Not Found"
        sub-title="The post you're looking for doesn't exist or has been deleted."
      >
        <template #extra>
          <el-button type="primary" @click="$router.push('/')">
            Go Home
          </el-button>
        </template>
      </el-result>
    </div>
    
    <div v-else class="post-detail-content">
      <!-- 返回按钮 -->
      <div class="page-header">
        <el-button type="text" @click="goBack" class="back-button">
          <el-icon><ArrowLeft /></el-icon>
          Back
        </el-button>
      </div>
      
      <!-- 帖子详情 -->
      <div class="post-container">
        <PostCard 
          :post="post" 
          @post-deleted="handlePostDeleted"
          @post-updated="handlePostUpdated"
        />
      </div>
    </div>
  </div>
</template>

<script setup>
import { ref, onMounted } from 'vue'
import { useRoute, useRouter } from 'vue-router'
import { ElMessage } from 'element-plus'
import { ArrowLeft } from '@element-plus/icons-vue'
import { getPost } from '@/api/posts'
import PostCard from '@/components/post/PostCard.vue'

const route = useRoute()
const router = useRouter()

const post = ref(null)
const loading = ref(false)

const loadPost = async () => {
  const postId = route.params.id
  if (!postId) {
    ElMessage.error('Invalid post ID')
    router.push('/')
    return
  }

  loading.value = true
  try {
    console.log('Loading post:', postId)
    const response = await getPost(postId)
    post.value = response.data
    console.log('Post loaded:', post.value)
    
    // 更新页面标题
    if (post.value?.title) {
      document.title = `${post.value.title} - AuralCanvas`
    }
  } catch (error) {
    console.error('Failed to load post:', error)
    if (error.response?.status === 404) {
      ElMessage.error('Post not found')
    } else {
      ElMessage.error('Failed to load post')
    }
    post.value = null
  } finally {
    loading.value = false
  }
}

const goBack = () => {
  if (window.history.length > 1) {
    router.go(-1)
  } else {
    router.push('/')
  }
}

const handlePostDeleted = (postId) => {
  console.log('Post deleted:', postId)
  ElMessage.success('Post deleted successfully')
  router.push('/')
}

const handlePostUpdated = (updateData) => {
  console.log('Post updated:', updateData)
  // 更新本地帖子数据
  if (post.value) {
    Object.assign(post.value, updateData)
  }
}

onMounted(() => {
  loadPost()
})
</script>

<style lang="scss" scoped>
.post-detail-page {
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
  min-height: 80vh;
  
  .loading-container {
    padding: 40px 20px;
  }
  
  .not-found {
    padding: 40px 20px;
    text-align: center;
  }
  
  .post-detail-content {
    .page-header {
      margin-bottom: 20px;
      
      .back-button {
        color: #606266;
        font-size: 14px;
        
        &:hover {
          color: #409EFF;
        }
        
        .el-icon {
          margin-right: 6px;
        }
      }
    }
    
    .post-container {
      // PostCard组件已有样式，这里不需要额外样式
    }
  }
}

@media (max-width: 768px) {
  .post-detail-page {
    padding: 15px;
    
    .page-header {
      margin-bottom: 15px;
    }
  }
}
</style>
